// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}

model User {
    id String @id @default(uuid())
    name String
    username String @unique
    email String 
    password String 
    address String? 
    profile String?
    jobId String?
    job Job? @relation(fields: [jobId] , references: [id])
    role Role @default(STAFF)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    presences Presence[]
    permissions Permission[]
}

model Job {
    id String @id @default(uuid())
    name String 
    desc String? 
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    users User[]
}

model Presence {
    id String @id @default(uuid())
    userId String 
    user User @relation(fields: [userId] , references: [id])
    enterAt DateTime 
    leaveAt DateTime?
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

}

model Permission {
    id String @id @default(uuid())
    userId String 
    user User @relation(fields: [userId] , references: [id])
    reason String 
    submissionDate DateTime @default(now())
    status Status @default(PENDING) 
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}


enum Role {
    ADMIN 
    HR 
    STAFF
}

enum Status {
    DECLINE 
    PENDING 
    APPROVE
}